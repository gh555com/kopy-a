# kope项目需求记录

## 当前功能：卡片动画物理碰撞效果

# 卡片层级管理需求

## 需求描述
1. 新卡片永远显示在老卡片下面，确保老卡片始终遮挡新卡片
2. 新卡片不应该被提升到顶层，即使在旧卡片滑出后
3. 加快旧卡片移动速度，但保持其消失速度不变
4. 旧卡片移动得更远一点
5. 旧卡片一边移动一边消失，而不是移动完后再消失
6. 旧卡片开始移动的时间晚一点，只有当新卡片真正触碰到旧卡片时才开始移动

## 实现方案
1. 移除新卡片自动提升到顶层的逻辑
2. 在碰撞检测时，将所有旧卡片提升到新卡片之上
3. 添加延迟执行的层级管理，确保在旧卡片滑出后新卡片仍然在最下面
4. 分离位置动画和透明度动画，使用不同的动画时长
5. 增加旧卡片的移动距离
6. 分别控制位置和透明度动画，使透明度动画稍晚开始
7. 修改碰撞检测逻辑，只有在新卡片真正触碰到旧卡片时才触发滑出
8. 添加延迟触发旧卡片滑出，使开始移动的时间晚一点

## 技术细节
1. 移除slide_in方法中raise_()调用
2. 在check_collision方法中，当检测到碰撞时，将所有旧卡片提升到新卡片之上
3. 添加QTimer.singleShot(10, self.ensure_at_bottom)延迟执行层级管理
4. 添加ensure_at_bottom方法，确保当前卡片始终在最下面
5. 添加SLIDE_OUT_POSITION_DURATION常量控制滑出位置动画时长
6. 位置动画使用300ms，透明度动画保持1175ms
7. 滑出位置动画距离从-80增加到-200像素
8. 不再使用并行动画组，而是分别控制位置和透明度动画
9. 透明度动画延迟100ms开始，实现一边移动一边消失的效果
10. 碰撞检测条件从new_left <= old_right改为new_left <= old_right - 10
11. 添加100ms延迟触发旧卡片滑出

## 已完成修改
1. 移除了新卡片自动提升到顶层的逻辑
2. 添加了碰撞时将旧卡片提升到新卡片之上的逻辑
3. 添加了延迟执行的层级管理，确保在旧卡片滑出后新卡片仍然在最下面
4. 添加了ensure_at_bottom方法，确保新卡片始终在最下面
5. 分离了位置动画和透明度动画，使用不同的动画时长
6. 增加了旧卡片的移动距离，从-80像素增加到-200像素
7. 分别控制位置和透明度动画，使透明度动画稍晚开始
8. 修改了碰撞检测逻辑，只有在新卡片真正触碰到旧卡片时才触发滑出
9. 添加了延迟触发旧卡片滑出，使开始移动的时间晚一点

## 历史记录
### 2023-XX-XX 初始实现
- 实现了基本的卡片显示和层级管理
- 新卡片会自动提升到顶层

### 2023-XX-XX 修复
- 移除了新卡片自动提升到顶层的逻辑
- 添加了碰撞时将旧卡片提升到新卡片之上的逻辑
- 添加了延迟执行的层级管理，确保在旧卡片滑出后新卡片仍然在最下面
- 添加了ensure_at_bottom方法，确保新卡片始终在最下面
- 分离了位置动画和透明度动画，使用不同的动画时长
- 增加了旧卡片的移动距离，从-80像素增加到-200像素
- 分别控制位置和透明度动画，使透明度动画稍晚开始
- 修改了碰撞检测逻辑，只有在新卡片真正触碰到旧卡片时才触发滑出
- 添加了延迟触发旧卡片滑出，使开始移动的时间晚一点

# 旧卡片动画修改要求

## 需求描述
1. 修改旧卡片动画速度，使其移动得更快
2. 旧卡片移动距离更远
3. 实现边移动边消失效果
4. 延迟开始移动时间
5. 仅在触碰到新卡片时才开始移动
6. 解决快速创建多张卡片时的界面混乱问题
7. 精简代码并优化性能
8. 不再特别设置卡片的显示相对层级

## 实现方案
1. 在TransparentPopup类中添加SLIDE_OUT_POSITION_DURATION常量，控制位置动画时长
2. 修改slide_out方法，使位置动画和透明度动画使用不同的时长
3. 增加旧卡片移动距离（从-80像素增加到-200像素）
4. 分离位置和透明度动画，实现边移动边消失效果
5. 修改碰撞检测逻辑，使新卡片与旧卡片重叠超过10像素时触发滑出
6. 使用QTimer.singleShot延迟触发旧卡片滑出
7. 恢复并行动画组，确保位置和透明度动画同时开始
8. 限制最大活动卡片数量，避免界面混乱
9. 改进卡片生命周期管理，确保正确处理快速创建多张卡片的情况
10. 精简代码，合并多行代码为单行，移除不必要的注释和变量
11. 移除卡片显示层级设置，让卡片自然显示

## 技术细节
1. SLIDE_OUT_POSITION_DURATION = 300ms（位置动画时长）
2. 透明度动画保持原速1175ms
3. 位置动画终点：QPoint(self.x() - 200, self.y())（移动距离-200像素）
4. 碰撞检测条件：new_left <= old_right - 10（重叠超过10像素）
5. 滑出延迟：100ms（后改为立即触发）
6. 层级调整延迟：10ms（确保新卡片在最下面）（后移除）
7. 使用QParallelAnimationGroup并行动画组，位置和透明度动画同时开始
8. 位置动画使用OutQuad缓动曲线，透明度动画使用Linear缓动曲线
9. 限制最大活动卡片数量为5张
10. 使用QElapsedTimer记录卡片创建时间
11. 改进close_popup方法，确保正确处理卡片生命周期
12. 合并多行代码为单行，移除不必要的注释
13. 移除ensure_at_bottom方法和相关层级设置代码

## 已完成修改
1. 添加了SLIDE_OUT_POSITION_DURATION常量（300ms）
2. 修改了slide_out方法，使用不同的动画时长
3. 增加了旧卡片移动距离（从-80像素增加到-200像素）
4. 实现了边移动边消失效果（使用并行动画组）
5. 修改了碰撞检测逻辑，使新卡片与旧卡片重叠超过10像素时触发滑出
6. 添加了延迟触发旧卡片滑出的功能（后改为立即触发）
7. 限制了最大活动卡片数量为5张
8. 改进了卡片生命周期管理，确保正确处理快速创建多张卡片的情况
9. 精简了代码，合并多行代码为单行，移除不必要的注释
10. 移除了卡片显示层级设置，让卡片自然显示

## 历史记录
1. 初始版本：旧卡片动画速度较慢，移动距离较短
2. 第一次修改：增加了位置动画速度，移动距离更远
3. 第二次修改：分离了位置和透明度动画，实现边移动边消失效果
4. 第三次修改：添加了延迟触发功能，使开始移动的时间晚一点
5. 第四次修改：恢复了并行动画组，确保位置和透明度动画同时开始
6. 第五次修改：限制了最大活动卡片数量，改进了卡片生命周期管理
7. 第六次修改：精简代码，移除层级设置，优化性能

## 当前功能：卡片动画物理碰撞效果

### 需求描述
1. 新卡片滑入逻辑保持不变
2. 修改老卡片滑出逻辑，实现物理碰撞效果
3. 取消分别设置滑进速度和滑出速度，统一为相同速度
4. 当新卡片滑入时，如果触碰到旧卡片的右边缘，旧卡片应该被推动滑出，而不是与新卡片重叠
5. 所有卡片应该滑入到同一个固定位置，而不是越来越往右移动
6. 新卡片永远显示在老卡片下面，让老卡片始终遮挡新卡片
7. 加快旧卡片移动速度，但保持其消失速度不变

### 实现方案
1. 在TransparentPopup类中添加碰撞检测逻辑
2. 修改slide_in方法，检测新卡片与现有卡片的位置关系
3. 当检测到碰撞时，触发旧卡片的滑出动画
4. 确保滑入和滑出动画速度一致
5. 所有卡片都滑入到同一个固定位置

### 技术细节
- 卡片宽度：222像素
- 卡片间距：40像素（从右侧边缘算起）
- 滑入/滑出动画时长：统一为75毫秒（SLIDE_DURATION）
- 碰撞检测：当新卡片的左边缘触及旧卡片的右边缘时触发
- 固定位置：屏幕右侧边缘-卡片宽度-40像素

### 兼容性要求
- 代码必须兼容Node.js 10及以下版本
- 避免使用过于现代的JavaScript特性

### 已完成修改
1. 统一了滑入和滑出动画时长为75毫秒（SLIDE_DURATION）
2. 修改了slide_in方法，添加了碰撞检测逻辑
3. 添加了check_collision方法，检测新卡片与旧卡片的碰撞
4. 修改了show_popup方法，不再自动滑出所有旧卡片
5. 实现了物理碰撞效果：新卡片触碰旧卡片时，旧卡片被推动滑出
6. 修复了碰撞检测中的逻辑错误：添加了括号确保正确的运算优先级
7. 添加了calculate_target_position方法，根据现有卡片位置计算新卡片的目标位置
8. 修改了show_popup方法，只有在没有现有卡片时才将新卡片设为顶层
9. 优化了碰撞检测逻辑，确保在碰撞时将新卡片提升到顶层
10. 修复了新卡片位置计算问题：调整calculate_target_position方法，确保新卡片会触发碰撞而不是直接放在旧卡片旁边
11. 修复了卡片位置越来越往右的问题：简化calculate_target_position方法，让所有卡片都滑入到同一个固定位置
12. 添加了ensure_at_bottom方法，确保新卡片在旧卡片滑出后仍然在最下面
13. 修复了快速连按时老卡片静止不动的问题
     - 在slide_out方法中添加了停止滑入动画的逻辑
     - 在check_collision方法中确保旧卡片停止动画后再滑出
     - 在close_popup方法中确保停止所有动画
     - 在slide_in方法中确保停止之前的动画再开始新动画
  14. 修复了RuntimeError: wrapped C/C++ object has been deleted错误
     - 在所有访问动画对象的代码中添加了try-except块
     - 处理动画对象已被删除的情况，避免程序崩溃

### 历史记录
#### 2023-XX-XX 初始需求
- 实现卡片物理碰撞效果
- 统一滑入/滑出速度
#### 2023-XX-XX 修复
- 修复了碰撞检测中的逻辑错误：`not hasattr(p, 'is_sliding_out') or not p.is_sliding_out` 改为 `(not hasattr(p, 'is_sliding_out') or not p.is_sliding_out)`
#### 2023-XX-XX 优化
- 添加了calculate_target_position方法，根据现有卡片位置计算新卡片的目标位置
- 修改了show_popup方法，只有在没有现有卡片时才将新卡片设为顶层
- 优化了碰撞检测逻辑，确保在碰撞时将新卡片提升到顶层
#### 2023-XX-XX 修复
- 修复了新卡片位置计算问题：调整calculate_target_position方法，确保新卡片会触发碰撞而不是直接放在旧卡片旁边
#### 2023-XX-XX 修复
- 修复了卡片位置越来越往右的问题：简化calculate_target_position方法，让所有卡片都滑入到同一个固定位置
- 添加了ensure_at_bottom方法，确保新卡片在旧卡片滑出后仍然在最下面